"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}var intervals=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],standardTuningNotes=[intervals[4],intervals[11],intervals[7],intervals[2],intervals[9],intervals[4]],scales={aMajor:{name:"A Maj",notes:[intervals[9],intervals[11],intervals[1],intervals[2],intervals[4],intervals[6],intervals[8]]},cMajor:{name:"C Maj",notes:[intervals[0],intervals[2],intervals[4],intervals[5],intervals[7],intervals[9],intervals[11]]},fSharpMajor:{name:"F# Maj",notes:[intervals[6],intervals[8],intervals[10],intervals[11],intervals[1],intervals[3],intervals[5]]},gMajor:{name:"G Maj",notes:[intervals[7],intervals[9],intervals[11],intervals[0],intervals[2],intervals[4],intervals[6]]}},selectedScale=scales.cMajor;function getNotesOfString(a){for(var b=[],c=11===intervals.indexOf(a)?0:intervals.indexOf(a)+1;11>=b.length;)intervals[c]||(c=0),b=[].concat(_toConsumableArray(b),[intervals[c]]),c++;return b}// function buildFretboard() {
//   document.getElementById("fretBoard").innerHTML = standardTuningNotes
//     .map(startingNote => getNotesOfString(startingNote))
//     .map(
//       (guitarString, stringNumber) =>
//         `<div class="guitar-string">
//           <span class="string-graphic"></span>
//           ${guitarString
//             .map(
//               (note, noteNumber) =>
//                 `<div class="fret">
//                 ${
//                   selectedScale.notes.includes(note)
//                     ? `<span class='note'>
//                       <p>${note}</p>
//                     </span>`
//                     : ""
//                 }
//                 ${
//                   stringNumber === 5
//                     ? `<span class="fret-number">${noteNumber + 1}</span>`
//                     : ""
//                 }
//                 ${
//                   stringNumber === 3 &&
//                   (noteNumber === 4 || noteNumber === 6 || noteNumber === 8)
//                     ? `<span class="fret-dot"></span>`
//                     : ""
//                 }
//                 ${
//                   noteNumber === 11 &&
//                   (stringNumber === 1 || stringNumber === 5)
//                     ? `<span class="fret-dot"></span>`
//                     : ""
//                 }
//               </div>`
//             )
//             .join("")}
//         </div>`
//     )
//     .join("");
// }
function buildHorizontalFretboard(){}function buildVerticalFretboard(){for(var a=[],b=0;12>b;b++)a=[].concat(_toConsumableArray(a),[buildFret(b)]);document.getElementById("fretBoard").innerHTML=a.join("")}function buildFret(){for(var a=[],b=0;11>b;b++){if(0!=b%2){a=[].concat(_toConsumableArray(a),["<div class=\"fret-block\"></div>"]);continue}a=[].concat(_toConsumableArray(a),["<div class=\"note-block\"></div>"])}return a}function buildFretboard(){buildVerticalFretboard()}function buildNoteSelector(){var a=[];for(var c in scales)a=[].concat(_toConsumableArray(a),["<option value=\"".concat(c,"\">").concat(scales[c].name,"</option>")]);var b=document.getElementById("noteSelect");b.innerHTML=a.join(),b.value="cMajor",b.addEventListener("change",function(a){selectedScale=scales[a.target.value],buildFretboard()})}buildNoteSelector(),buildFretboard();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,