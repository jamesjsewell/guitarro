"use strict";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}var intervals=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],standardTuningNotes=[intervals[4],intervals[9],intervals[2],intervals[7],intervals[11],intervals[4]],scalesMap={},degreesMap={major:{id:"major",degrees:[2,2,1,2,2,2,1]},minor:{id:"minor",degrees:[2,1,2,2,1,2,2]}},selectedKey=intervals[0],selectedScaleDegrees=degreesMap.major,selectedScale=null,stringsArray=[];function buildScale(a){var b=[],c=intervals.indexOf(a),d=!0,e=!1,f=void 0;try{for(var g,h,j=selectedScaleDegrees.degrees[Symbol.iterator]();!(d=(g=j.next()).done);d=!0){if(h=g.value,!intervals[c+h]){var k=c===intervals.length-1&&2===h?1:0;c=k,b=[].concat(_toConsumableArray(b),[intervals[k]]);continue}b=[].concat(_toConsumableArray(b),[intervals[c+h]]),c+=h}}catch(a){e=!0,f=a}finally{try{d||null==j["return"]||j["return"]()}finally{if(e)throw f}}return b}function buildScalesMap(){var a=!0,b=!1,c=void 0;try{for(var d,e,f=intervals[Symbol.iterator]();!(a=(d=f.next()).done);a=!0)e=d.value,scalesMap=_objectSpread({},scalesMap,_defineProperty({},e,{id:e,notes:buildScale(e)}))}catch(a){b=!0,c=a}finally{try{a||null==f["return"]||f["return"]()}finally{if(b)throw c}}selectedScale=scalesMap[selectedKey]}buildScalesMap();function getNotesOfString(a){for(var b=[],c=11===intervals.indexOf(a)?0:intervals.indexOf(a)+1;11>=b.length;)intervals[c]||(c=0),b=[].concat(_toConsumableArray(b),[intervals[c]]),c++;return b}function buildFretboard(a){var b=a.portrait,c=!0===b?[].concat(standardTuningNotes):[].concat(standardTuningNotes).reverse();document.getElementById("fretBoard").innerHTML="<div class=\"frets-edge\">".concat(buildFrets(),"</div> \n    ").concat(c.map(function(a,b){return"".concat(buildString(a)," ").concat(5>b?"<div class=\"frets\">".concat(buildFrets(b),"</div>"):"")}).join("")," \n    <div class=\"frets-edge\">").concat(buildFrets(),"</div>\n    </div>");var d=[],e=[1,7,6,5,4,3,2],f=1;stringsArray[0].map(function(a,b){var c=stringsArray[0].indexOf(selectedKey);return 0===b?(f=e[c],void(d=[f])):void(f=e[e.indexOf(f)-1],f===void 0&&(f=e[e.length-1]),d=[].concat(_toConsumableArray(d),[f]))}),console.log(d)}var buildFrets=function(a){for(var b="",c=0;12>c;c++)b+="<div class=\"fret\">".concat(2===a&&(4===c||6===c||8===c)||11===c&&(0===a||4===a)?"<div class=\"fret-dot\"></div>":"","</div>");return b},buildString=function(a){var b=getNotesOfString(a);return stringsArray=[],stringsArray=[].concat(_toConsumableArray(stringsArray),[b.filter(function(a){return selectedScale.notes.includes(a)})]),"<div class=\"guitar-string\">".concat(b.map(function(a){return"<div class=\"note\">".concat(selectedScale.notes.includes(a)?"<div class=\"note-text-backdrop\"></div><span class=\"note-text\"><p>".concat(a,"</p></span>"):"","</div>")}).join(""),"</div>")};function buildKeySelector(){var a=[];for(var c in scalesMap)a=[].concat(_toConsumableArray(a),["<option value=\"".concat(c,"\">").concat(c,"</option>")]);var b=document.getElementById("keySelect");b.innerHTML=a.join(),b.value=selectedKey}function buildScaleSelector(){var a=[];for(var c in degreesMap)a=[].concat(_toConsumableArray(a),["<option value=\"".concat(c,"\">").concat(c,"</option>")]);var b=document.getElementById("scaleSelect");b.innerHTML=a.join(),b.value=selectedScaleDegrees.id}function reDrawApp(){return buildScalesMap(),buildKeySelector(),buildScaleSelector(),window.innerHeight>window.innerWidth?(document.getElementById("wrapper").className="app-wrapper portrait-mode",void buildFretboard({portrait:!0})):void(document.getElementById("wrapper").className="app-wrapper landscape-mode",buildFretboard({portrait:!1}))}window.addEventListener("resize",function(){reDrawApp()}),document.getElementById("keySelect").addEventListener("change",function(a){selectedKey=a.target.value,document.getElementById("keySelect").value=a.target.value,reDrawApp()}),document.getElementById("scaleSelect").addEventListener("change",function(a){selectedScaleDegrees=degreesMap[a.target.value],document.getElementById("scaleSelect").value=a.target.value,reDrawApp()}),reDrawApp(),document.getElementById("fullScreen").addEventListener("click",function(){screenfull.isEnabled&&screenfull.toggle()});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,