"use strict";function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(b,!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(b).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(a){if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a))return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}}var intervals=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],scalesMap={},degreesMap={major:{id:"major",degrees:[2,2,1,2,2,2,1]},minor:{id:"minor",degrees:[2,1,2,2,1,2,2]}},selectedKey=intervals[0],selectedScaleDegrees=degreesMap.major,selectedScale=null,stringsArray=[],shapeNotes=[],selectedShape={index:0,fret:0,number:0},isPortrait=!1;function buildScale(a){var b=[],c=intervals.indexOf(a),d=!0,e=!1,f=void 0;try{for(var g,h,j=selectedScaleDegrees.degrees[Symbol.iterator]();!(d=(g=j.next()).done);d=!0){if(h=g.value,!intervals[c+h]){var k=c===intervals.length-1&&2===h?1:0;c=k,b=[].concat(_toConsumableArray(b),[intervals[k]]);continue}b=[].concat(_toConsumableArray(b),[intervals[c+h]]),c+=h}}catch(a){e=!0,f=a}finally{try{d||null==j["return"]||j["return"]()}finally{if(e)throw f}}return b}function buildScalesMap(){var a=!0,b=!1,c=void 0;try{for(var d,e,f=intervals[Symbol.iterator]();!(a=(d=f.next()).done);a=!0)e=d.value,scalesMap=_objectSpread({},scalesMap,_defineProperty({},e,{id:e,notes:buildScale(e)}))}catch(a){b=!0,c=a}finally{try{a||null==f["return"]||f["return"]()}finally{if(b)throw c}}selectedScale=scalesMap[selectedKey]}buildScalesMap();function getNotesOfString(a){for(var b=[],c=11===intervals.indexOf(a)?0:intervals.indexOf(a)+1;11>=b.length;)intervals[c]||(c=0),b=[].concat(_toConsumableArray(b),[intervals[c]]),c++;return b}function buildFretboard(a){var b=a.portrait,c=[intervals[4],intervals[9],intervals[2],intervals[7],intervals[11],intervals[4]];stringsArray=[];var d=!0===b?[].concat(c):[].concat(c).reverse();document.getElementById("fretBoard").innerHTML="<div class=\"frets-edge\">".concat(buildFrets(),"</div> \n    ").concat(d.map(function(a,b){return"".concat(buildString(a,b)," ").concat(5>b?"<div class=\"frets\">".concat(buildFrets(b),"</div>"):"")}).join("")," \n    <div class=\"frets-edge\">").concat(buildFrets(),"</div>\n    </div>");var e=[],f=[1,7,6,5,4,3,2],g=1;shapeNotes=[],stringsArray[0].forEach(function(a,b){var c=stringsArray[0].indexOf(stringsArray[0].find(function(a){return a.note===selectedKey})),d=null;if(0===b)return g=f[c],d={fret:a.fret,number:f[c],index:c,note:a.note},void(e=[d]);var h=f.indexOf(g)-1;g=f[h],d={fret:a.fret,number:g,index:h,note:a.note},h=f.length-1,g===void 0&&(g=f[h],d={fret:a.fret,number:g,index:h,note:a.note}),e=[].concat(_toConsumableArray(e),[d])}),e.forEach(function(a,c){var d=b?_toConsumableArray(stringsArray):_toConsumableArray(stringsArray).reverse();d.map(function(b,d){var e=[],f=!0,g=b.indexOf(b.find(function(b){return b.fret===a.fret}));if(-1===g&&(f=!1,g=b.indexOf(b.find(function(b){return b.fret===a.fret+1}))),4===d||5===d){var h=f?g+1:g;e=b.slice(h,h+3)}else e=b.slice(g,g+3);return shapeNotes[c]?void(shapeNotes[c]=[].concat(_toConsumableArray(shapeNotes[c]),_toConsumableArray(e))):void(shapeNotes[c]=e)})}),buildShapeSelect(e),shapeNotes[selectedShape.index].map(function(a){document.getElementById(a.id).className="highlight"})}var buildFrets=function(a){for(var b="",c=0;12>c;c++)b+="<div class=\"fret\">".concat(2===a&&(4===c||6===c||8===c)||11===c&&(0===a||4===a)?"<div class=\"fret-dot\"></div>":"","</div>");return b},buildString=function(a,b){var c=getNotesOfString(a).map(function(a,c){return{id:b+a,note:a,stringNumber:b,fret:c}});stringsArray=[].concat(_toConsumableArray(stringsArray),[c.filter(function(a){return selectedScale.notes.includes(a.note)})]);var d=isPortrait?0:5;return"<div class=\"guitar-string\">".concat(c.map(function(a){return b===d?"<div class=\"root-note\">".concat(selectedScale.notes.includes(a.note)?"<button rootNoteFret=\"".concat(a.fret,"\" class=\"root-note-text-backdrop shape-select root-note-shape-select ").concat(selectedShape.note===a.note?"selected-root-note":"","\"></button><span class=\"root-note-text\"><p id=").concat(a.id,">").concat(a.note,"</p></span>"):"","</div>"):"<div class=\"note\">".concat(selectedScale.notes.includes(a.note)?"<div class=\"note-text-backdrop\"></div><span class=\"note-text\"><p id=".concat(a.id,">").concat(a.note,"</p></span>"):"","</div>")}).join(""),"</div>")};function buildKeySelector(){var a=[];for(var c in scalesMap)a=[].concat(_toConsumableArray(a),["<option value=\"".concat(c,"\">").concat(c,"</option>")]);var b=document.getElementById("keySelect");b.innerHTML=a.join(),b.value=selectedKey}function buildScaleSelector(){var a=[];for(var c in degreesMap)a=[].concat(_toConsumableArray(a),["<option value=\"".concat(c,"\">").concat(c,"</option>")]);var b=document.getElementById("scaleSelect");b.innerHTML=a.join(),b.value=selectedScaleDegrees.id}function buildShapeSelect(a){a.forEach(function(a,b){+b===+selectedShape.index&&(selectedShape=a,selectedShape.index=b)}),document.getElementById("shape-select").innerHTML=a.map(function(a,b){return"<button \n    shapeIndex=".concat(b,"\n    shapeFret=").concat(a.fret," \n    class=\"shape-select ").concat(+selectedShape.index===+b?"selected-shape":"","\">\n    ").concat(a.number,"\n  </button>")}).join(""),document.querySelectorAll("[rootNoteFret]").forEach(function(b){var c=null,d=null;a.forEach(function(a,e){if(+b.getAttribute("rootNoteFret")===+a.fret)return c=a,d=e,e===selectedShape.index?void b.classList.add("selected-root-note"):void b.classList.remove("selected-root-note")}),b.setAttribute("shapeIndex",d),b.setAttribute("shapeNumber",c.number),b.setAttribute("shapeNote",c.note)}),document.querySelectorAll(".shape-select","[rootNoteFret]").forEach(function(a){return a.addEventListener("click",function(a){selectedShape={index:a.target.getAttribute("shapeIndex"),number:a.target.getAttribute("shapeNumber"),fret:a.target.getAttribute("rootNoteFret")?a.target.getAttribute("rootNoteFret"):a.target.getAttribute("shapeFret"),note:a.target.getAttribute("shapeNote")},buildFretboard({portrait:isPortrait})})})}function reDrawApp(){return buildScalesMap(),buildKeySelector(),buildScaleSelector(),window.innerHeight>window.innerWidth?(document.getElementById("wrapper").className="app-wrapper portrait-mode",isPortrait=!0,void buildFretboard({portrait:!0})):void(isPortrait=!1,document.getElementById("wrapper").className="app-wrapper landscape-mode",buildFretboard({portrait:!1}))}window.addEventListener("resize",function(){reDrawApp()}),document.getElementById("keySelect").addEventListener("change",function(a){selectedKey=a.target.value,document.getElementById("keySelect").value=a.target.value,reDrawApp()}),document.getElementById("scaleSelect").addEventListener("change",function(a){selectedScaleDegrees=degreesMap[a.target.value],document.getElementById("scaleSelect").value=a.target.value,reDrawApp()}),reDrawApp(),document.getElementById("fullScreen").addEventListener("click",function(){screenfull.isEnabled&&screenfull.toggle()});

//# sourceMappingURL=data:application/json;charset=utf-8;base64,